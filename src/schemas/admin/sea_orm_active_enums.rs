//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "action_code")]
pub enum ActionCode {
    #[sea_orm(string_value = "CREATE")]
    Create,
    #[sea_orm(string_value = "READ")]
    Read,
    #[sea_orm(string_value = "UPDATE")]
    Update,
    #[sea_orm(string_value = "DELETE")]
    Delete,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "api_method")]
pub enum ApiMethod {
    #[sea_orm(string_value = "GET")]
    Get,
    #[sea_orm(string_value = "POST")]
    Post,
    #[sea_orm(string_value = "PUT")]
    Put,
    #[sea_orm(string_value = "DELETE")]
    Delete,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "gender")]
pub enum Gender {
    #[sea_orm(string_value = "1")]
    _1,
    #[sea_orm(string_value = "2")]
    _2,
    #[sea_orm(string_value = "3")]
    _3,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "target_type")]
pub enum TargetType {
    #[sea_orm(string_value = "MENU")]
    Menu,
    #[sea_orm(string_value = "API_GROUP")]
    ApiGroup,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "type")]
pub enum Type {
    #[sea_orm(string_value = "DIRECTORY")]
    Directory,
    #[sea_orm(string_value = "MENU")]
    Menu,
    #[sea_orm(string_value = "BUTTON")]
    Button,
}
