//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "sys_menu_permission")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub menu_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub permission_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::sys_menu::Entity",
        from = "Column::MenuId",
        to = "super::sys_menu::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    SysMenu,
    #[sea_orm(
        belongs_to = "super::sys_permission::Entity",
        from = "Column::PermissionId",
        to = "super::sys_permission::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    SysPermission,
}

impl Related<super::sys_menu::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SysMenu.def()
    }
}

impl Related<super::sys_permission::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SysPermission.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
